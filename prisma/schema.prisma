generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id             String                 @id @default(uuid())
  nomeFantasia   String
  representantes ClienteRepresentante[]
  oportunidades  Oportunidade[]
  ativo          Boolean                @default(true)
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @default(now()) @updatedAt
  Filial         Filial[]
  Lead           Lead[]
}

model ClienteRepresentante {
  id             String         @id @default(uuid())
  clienteId      String
  cliente        Cliente        @relation(fields: [clienteId], references: [id])
  nome           String
  email          String
  departamento   String
  cargo          String
  dataNascimento DateTime
  telefone       String
  ativo          Boolean        @default(true)
  contratos      Contrato[]
  oportunidades  Oportunidade[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt
}

model Filial {
  id               String         @id @default(uuid())
  clienteId        String
  cliente          Cliente        @relation(fields: [clienteId], references: [id])
  nome             String
  cnpj             String         @unique
  telefone         String
  contratos        Contrato[]
  ativo            Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  filialEnderecoId String
  filialEndereco   FilialEndereco @relation(fields: [filialEnderecoId], references: [id])
}

model FilialEndereco {
  id         String   @id @default(uuid())
  logradouro String
  numero     String
  bairro     String
  cidade     String
  estado     String
  cep        String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  filiais    Filial[]
}

model Contrato {
  id                       String                 @id @default(uuid())
  filialId                 String
  filial                   Filial                 @relation(fields: [filialId], references: [id])
  oportunidadeOriginal     Oportunidade           @relation(fields: [oportunidadeId], references: [id])
  oportunidadeId           String
  representanteId          String
  representanteResponsavel ClienteRepresentante   @relation(fields: [representanteId], references: [id])
  caracteristica           ContratoCaracteristica
  titulo                   String
  valor                    Float
  numeroParcelas           Int                    @default(0)
  dataInicio               DateTime
  dataFimPrevista          DateTime
  dataPagamento            DateTime
  renovarAutomaticamente   Boolean                @default(false)
  areaExecutora            AreaExecutora
  status                   ContratoStatus         @default(EM_ANDAMENTO)
  //TBD - PeriodoContratual - O que Ã© isso?
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @default(now()) @updatedAt
}

enum ContratoStatus {
  EM_ANDAMENTO
  FINALIZADO
  CANCELADO
}

enum ContratoCaracteristica {
  MENSALIDADE
  PROJETO
}

model Oportunidade {
  id                     String                     @id @default(uuid())
  clienteId              String
  cliente                Cliente                    @relation(fields: [clienteId], references: [id])
  representanteId        String
  representante          ClienteRepresentante       @relation(fields: [representanteId], references: [id])
  propostas              Proposta[]
  titulo                 String
  //TBD - gerenteComercial
  caracteristica         OportunidadeCaracteristica
  //TBD - periodoContratual
  areaExecutora          AreaExecutora
  dataFechamentoPrevista DateTime
  etapa                  OportunidadeEtapa          @default(NEGOCIACAO)
  valor                  Float
  createdAt              DateTime                   @default(now())
  updatedAt              DateTime                   @default(now()) @updatedAt
  Contrato               Contrato[]
}

enum OportunidadeEtapa {
  NEGOCIACAO
  PERDIDA
  CONGELADO
  CONTRATO_ENVIADO
  CONLUIDA
}

enum OportunidadeCaracteristica {
  MENSALIDADE
  PROJETO
}

enum AreaExecutora {
  INFRAESTRUTURA
  DESENVOLVIMENTO
  BUSINESS_INTELLIGENCE
  ALOCACAO_DE_RECURSOS
  HUNTING_DE_RECURSOS
}

enum TipoProposta {
  PROPOSTA_TECNICA_COMERCIAL
  CONTRATO
  ADITIVO
}

model Proposta {
  id             String       @id @default(uuid())
  tipo           TipoProposta
  versao         String
  dataEnvio      DateTime
  comissao       Float
  oportunidadeId String
  oportunidade   Oportunidade @relation(fields: [oportunidadeId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Lead {
  id                    String   @id @default(uuid())
  clienteId             String
  cliente               Cliente  @relation(fields: [clienteId], references: [id])
  //TBD- gerenteComercialId
  nomeRepresentante     String
  telefoneRepresentante String
  emailRepresentante    String
  observacao            String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now()) @updatedAt
}

enum Role {
  ADMIN
  USER
}

model Usuario {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  perfil    Perfil?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Perfil {
  id        String   @id @default(uuid())
  nome      String
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
